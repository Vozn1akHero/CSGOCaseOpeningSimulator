{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { BehaviorSubject } from \"rxjs\";\nexport default class Env {\n  static get audioVolume$() {\n    return this._audioVolume.asObservable();\n  }\n\n}\n\n_defineProperty(Env, \"_audioVolume\", new BehaviorSubject(0));","map":{"version":3,"sources":["D:/Projects/react-ssr/react-ssr/helpers/env.ts"],"names":["BehaviorSubject","Env","audioVolume$","_audioVolume","asObservable"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,MAAhC;AAEA,eAAe,MAAMC,GAAN,CAAU;AAEvB,aAAkBC,YAAlB,GAAiC;AAC/B,WAAO,KAAKC,YAAL,CAAkBC,YAAlB,EAAP;AACD;;AAJsB;;gBAAJH,G,kBACoC,IAAID,eAAJ,CAAoB,CAApB,C","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\r\n\r\nexport default class Env {\r\n  private static _audioVolume: BehaviorSubject<number> = new BehaviorSubject(0);\r\n  public static get audioVolume$() {\r\n    return this._audioVolume.asObservable();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}