{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Quality } from \"./quality\";\nexport default class Storage {}\n\n_defineProperty(Storage, \"identifier\", \"receivedItems\");\n\n_defineProperty(Storage, \"saveReceivedItem\", item => {\n  const curValue = localStorage.getItem(Storage.identifier) != null ? JSON.parse(localStorage.getItem(Storage.identifier)) : [];\n  const valToStore = JSON.stringify(Array.of(item, ...curValue));\n  localStorage.setItem(Storage.identifier, valToStore);\n});\n\n_defineProperty(Storage, \"selectAllRaw\", () => {\n  return JSON.parse(localStorage.getItem(Storage.identifier));\n});\n\n_defineProperty(Storage, \"selectAll\", () => {\n  let all = JSON.parse(localStorage.getItem(Storage.identifier));\n  all.map(value => {\n    if (value.quality) value.quality = Object.keys(value).find(key => value[key] === value.quality);\n    return value;\n  });\n  return all;\n});","map":{"version":3,"sources":["D:/Projects/react-ssr/react-ssr/helpers/storage.js"],"names":["Quality","Storage","item","curValue","localStorage","getItem","identifier","JSON","parse","valToStore","stringify","Array","of","setItem","all","map","value","quality","Object","keys","find","key"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,WAAxB;AAEA,eAAe,MAAMC,OAAN,CAAc;;gBAARA,O,gBACC,e;;gBADDA,O,sBAGQC,IAAD,IAAU;AAClC,QAAMC,QAAQ,GACZC,YAAY,CAACC,OAAb,CAAqBJ,OAAO,CAACK,UAA7B,KAA4C,IAA5C,GACIC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBJ,OAAO,CAACK,UAA7B,CAAX,CADJ,GAEI,EAHN;AAIA,QAAMG,UAAU,GAAGF,IAAI,CAACG,SAAL,CAAeC,KAAK,CAACC,EAAN,CAASV,IAAT,EAAe,GAAGC,QAAlB,CAAf,CAAnB;AACAC,EAAAA,YAAY,CAACS,OAAb,CAAqBZ,OAAO,CAACK,UAA7B,EAAyCG,UAAzC;AACD,C;;gBAVkBR,O,kBAYG,MAAM;AAC1B,SAAOM,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBJ,OAAO,CAACK,UAA7B,CAAX,CAAP;AACD,C;;gBAdkBL,O,eAgBA,MAAM;AACvB,MAAIa,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBJ,OAAO,CAACK,UAA7B,CAAX,CAAV;AACAQ,EAAAA,GAAG,CAACC,GAAJ,CAASC,KAAD,IAAW;AACjB,QAAIA,KAAK,CAACC,OAAV,EACED,KAAK,CAACC,OAAN,GAAgBC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,IAAnB,CACbC,GAAD,IAASL,KAAK,CAACK,GAAD,CAAL,KAAeL,KAAK,CAACC,OADhB,CAAhB;AAIF,WAAOD,KAAP;AACD,GAPD;AAQA,SAAOF,GAAP;AACD,C","sourcesContent":["import { Quality } from \"./quality\";\r\n\r\nexport default class Storage {\r\n  static identifier = \"receivedItems\";\r\n\r\n  static saveReceivedItem = (item) => {\r\n    const curValue =\r\n      localStorage.getItem(Storage.identifier) != null\r\n        ? JSON.parse(localStorage.getItem(Storage.identifier))\r\n        : [];\r\n    const valToStore = JSON.stringify(Array.of(item, ...curValue));\r\n    localStorage.setItem(Storage.identifier, valToStore);\r\n  };\r\n\r\n  static selectAllRaw = () => {\r\n    return JSON.parse(localStorage.getItem(Storage.identifier));\r\n  };\r\n\r\n  static selectAll = () => {\r\n    let all = JSON.parse(localStorage.getItem(Storage.identifier));\r\n    all.map((value) => {\r\n      if (value.quality)\r\n        value.quality = Object.keys(value).find(\r\n          (key) => value[key] === value.quality\r\n        );\r\n\r\n      return value;\r\n    });\r\n    return all;\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}