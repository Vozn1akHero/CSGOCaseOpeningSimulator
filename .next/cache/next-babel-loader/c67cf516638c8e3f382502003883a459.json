{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { BehaviorSubject } from \"rxjs\";\nexport default class Env {\n  constructor() {\n    _defineProperty(this, \"_audioVolume\", new BehaviorSubject(0.2));\n  }\n\n  audioVolume$() {\n    return this._audioVolume.asObservable();\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/react-ssr/react-ssr/helpers/env.ts"],"names":["BehaviorSubject","Env","audioVolume$","_audioVolume","asObservable"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,MAAhC;AAEA,eAAe,MAAMC,GAAN,CAAU;AAAA;AAAA,0CACyB,IAAID,eAAJ,CAAoB,GAApB,CADzB;AAAA;;AAEhBE,EAAAA,YAAP,GAAsB;AACpB,WAAO,KAAKC,YAAL,CAAkBC,YAAlB,EAAP;AACD;;AAJsB","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\r\n\r\nexport default class Env {\r\n  private _audioVolume: BehaviorSubject<number> = new BehaviorSubject(0.2);\r\n  public audioVolume$() {\r\n    return this._audioVolume.asObservable();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}