{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\react-ssr\\\\react-ssr\\\\Components\\\\ReceivedItems\\\\ReceivedItems.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styles from \"./ReceivedItems.module.scss\";\nimport { itemType } from \"../../helpers/item-type\";\nexport default class ReceivedItems extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"select\", page => {\n      const keyByValue = value => {\n        return Object.keys(itemType)[Object.values(itemType).indexOf(value)];\n      };\n\n      let allItems = JSON.parse(localStorage.getItem(\"receivedItems\"));\n      allItems.map(value => {\n        value.type = keyByValue(value.type);\n      });\n      let firstIndex = (page - 1) * 30;\n      let lastIndex = firstIndex + 29;\n      return allItems.slice(firstIndex, lastIndex);\n    });\n\n    this.state = {\n      items: this.select(this.props.page)\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: styles.receivedItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, this.state.items.map((value, index) => __jsx(Item, {\n      key: index,\n      showSkinTitle: true,\n      type: value.type,\n      image: value.image,\n      weapon: value.weapon,\n      skin: value.skin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/react-ssr/react-ssr/Components/ReceivedItems/ReceivedItems.jsx"],"names":["React","Component","styles","itemType","ReceivedItems","constructor","props","page","keyByValue","value","Object","keys","values","indexOf","allItems","JSON","parse","localStorage","getItem","map","type","firstIndex","lastIndex","slice","state","items","select","render","receivedItems","index","image","weapon","skin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,oCAOTC,IAAD,IAAU;AACjB,YAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,eAAOC,MAAM,CAACC,IAAP,CAAYR,QAAZ,EAAsBO,MAAM,CAACE,MAAP,CAAcT,QAAd,EAAwBU,OAAxB,CAAgCJ,KAAhC,CAAtB,CAAP;AACD,OAFD;;AAGA,UAAIK,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAf;AACAJ,MAAAA,QAAQ,CAACK,GAAT,CAAcV,KAAD,IAAW;AACtBA,QAAAA,KAAK,CAACW,IAAN,GAAaZ,UAAU,CAACC,KAAK,CAACW,IAAP,CAAvB;AACD,OAFD;AAGA,UAAIC,UAAU,GAAG,CAACd,IAAI,GAAG,CAAR,IAAa,EAA9B;AACA,UAAIe,SAAS,GAAGD,UAAU,GAAG,EAA7B;AACA,aAAOP,QAAQ,CAACS,KAAT,CAAeF,UAAf,EAA2BC,SAA3B,CAAP;AACD,KAlBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKC,MAAL,CAAY,KAAKpB,KAAL,CAAWC,IAAvB;AADI,KAAb;AAGD;;AAeDoB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBN,GAAjB,CAAqB,CAACV,KAAD,EAAQoB,KAAR,KACpB,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,aAAa,MAFf;AAGE,MAAA,IAAI,EAAEpB,KAAK,CAACW,IAHd;AAIE,MAAA,KAAK,EAAEX,KAAK,CAACqB,KAJf;AAKE,MAAA,MAAM,EAAErB,KAAK,CAACsB,MALhB;AAME,MAAA,IAAI,EAAEtB,KAAK,CAACuB,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAcD;;AApCkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./ReceivedItems.module.scss\";\r\nimport { itemType } from \"../../helpers/item-type\";\r\n\r\nexport default class ReceivedItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: this.select(this.props.page),\r\n    };\r\n  }\r\n\r\n  select = (page) => {\r\n    const keyByValue = (value) => {\r\n      return Object.keys(itemType)[Object.values(itemType).indexOf(value)];\r\n    };\r\n    let allItems = JSON.parse(localStorage.getItem(\"receivedItems\"));\r\n    allItems.map((value) => {\r\n      value.type = keyByValue(value.type);\r\n    });\r\n    let firstIndex = (page - 1) * 30;\r\n    let lastIndex = firstIndex + 29;\r\n    return allItems.slice(firstIndex, lastIndex);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.receivedItems}>\r\n        {this.state.items.map((value, index) => (\r\n          <Item\r\n            key={index}\r\n            showSkinTitle\r\n            type={value.type}\r\n            image={value.image}\r\n            weapon={value.weapon}\r\n            skin={value.skin}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}