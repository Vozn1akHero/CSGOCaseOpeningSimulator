{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\react-ssr\\\\react-ssr\\\\Components\\\\ItemLine\\\\ItemLine.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Item from \"../Item/Item\";\nimport styled, { css } from \"styled-components\";\nimport { slider } from \"./keyframes\";\nimport { itemType } from \"../../helpers/item-type\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nexport default class ItemLine extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"Animation\", void 0);\n\n    _defineProperty(this, \"loaded\", void 0);\n  }\n\n  componentDidMount() {\n    Animation = styled.div`\n      display: flex;\n      animation: ${css`\n        ${slider} ${this.context.caseOpeningTime / 1000}s;\n      `};\n      animation-fill-mode: forwards;\n\n      & > div {\n        margin-left: 5px;\n      }\n    `;\n    loaded = true;\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, loaded && __jsx(Animation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, this.props.items.map((value, index) => {\n      if (value.type === itemType.GOLD) {\n        return __jsx(Item, {\n          key: index,\n          type: itemType.GOLD,\n          image: \"/images/specialitem1.png\",\n          isStatrak: value.isStatrak,\n          weapon: \"★ Rare Special Item ★\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }\n        });\n      } else {\n        return __jsx(Item, {\n          key: index,\n          type: value.type,\n          image: value.image,\n          showSkinTitle: true,\n          isStatrak: value.isStatrak,\n          weapon: value.weapon,\n          skin: value.skin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        });\n      }\n    })));\n  }\n\n}\n\n_defineProperty(ItemLine, \"contextType\", SettingsContext);","map":{"version":3,"sources":["D:/Projects/react-ssr/react-ssr/Components/ItemLine/ItemLine.jsx"],"names":["React","Component","Item","styled","css","slider","itemType","SettingsContext","ItemLine","componentDidMount","Animation","div","context","caseOpeningTime","loaded","render","props","items","map","value","index","type","GOLD","isStatrak","image","weapon","skin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,eAAe,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAK9CQ,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,GAAGP,MAAM,CAACQ,GAAI;;mBAERP,GAAI;UACbC,MAAO,IAAG,KAAKO,OAAL,CAAaC,eAAb,GAA+B,IAAK;OAChD;;;;;;KAJJ;AAWAC,IAAAA,MAAM,GAAG,IAAT;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,4BACGD,MAAM,IACL,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACtC,UAAID,KAAK,CAACE,IAAN,KAAef,QAAQ,CAACgB,IAA5B,EAAkC;AAChC,eACE,MAAC,IAAD;AACE,UAAA,GAAG,EAAEF,KADP;AAEE,UAAA,IAAI,EAAEd,QAAQ,CAACgB,IAFjB;AAGE,UAAA,KAAK,EAAE,0BAHT;AAIE,UAAA,SAAS,EAAEH,KAAK,CAACI,SAJnB;AAKE,UAAA,MAAM,EAAE,uBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,OAVD,MAUO;AACL,eACE,MAAC,IAAD;AACE,UAAA,GAAG,EAAEH,KADP;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACK,KAHf;AAIE,UAAA,aAAa,MAJf;AAKE,UAAA,SAAS,EAAEL,KAAK,CAACI,SALnB;AAME,UAAA,MAAM,EAAEJ,KAAK,CAACM,MANhB;AAOE,UAAA,IAAI,EAAEN,KAAK,CAACO,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AACF,KAxBA,CADH,CAFJ,CADF;AAiCD;;AAtD6C;;gBAA3BlB,Q,iBACED,e","sourcesContent":["import React, { Component } from \"react\";\r\nimport Item from \"../Item/Item\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { slider } from \"./keyframes\";\r\nimport { itemType } from \"../../helpers/item-type\";\r\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\r\n\r\nexport default class ItemLine extends Component {\r\n  static contextType = SettingsContext;\r\n  Animation;\r\n  loaded;\r\n\r\n  componentDidMount() {\r\n    Animation = styled.div`\r\n      display: flex;\r\n      animation: ${css`\r\n        ${slider} ${this.context.caseOpeningTime / 1000}s;\r\n      `};\r\n      animation-fill-mode: forwards;\r\n\r\n      & > div {\r\n        margin-left: 5px;\r\n      }\r\n    `;\r\n    loaded = true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {loaded && (\r\n          <Animation>\r\n            {this.props.items.map((value, index) => {\r\n              if (value.type === itemType.GOLD) {\r\n                return (\r\n                  <Item\r\n                    key={index}\r\n                    type={itemType.GOLD}\r\n                    image={\"/images/specialitem1.png\"}\r\n                    isStatrak={value.isStatrak}\r\n                    weapon={\"★ Rare Special Item ★\"}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <Item\r\n                    key={index}\r\n                    type={value.type}\r\n                    image={value.image}\r\n                    showSkinTitle\r\n                    isStatrak={value.isStatrak}\r\n                    weapon={value.weapon}\r\n                    skin={value.skin}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </Animation>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}